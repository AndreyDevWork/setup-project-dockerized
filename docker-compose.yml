version: '3.8'

services:
    nginx:
        image: nginx:alpine
        container_name: nginx-pokemons
        ports:
            - "${NGINX_HOST_PORT}"
        volumes:
            - ./src:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        depends_on:
            - app
            - db

    db:
        image: postgres
        container_name: postgres-pokemons
        volumes:
            - ./postgresql/data:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_HOST_PORT}"
        environment:
            POSTGRES_DB: "${POSTGRES_DB}"
            POSTGRES_USER: "${POSTGRES_USER}"
            POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

    app:
        container_name: pokemons
        build:
            context: ./php
            dockerfile: Dockerfile
        volumes:
            - ./src:/var/www
        ports:
            - "${APP_HOST_PORT}"
        working_dir: /var/www

    pgadmin:
        image: dpage/pgadmin4
        container_name: pg-admin-pokemons
        ports:
            - "${PGADMIN_HOST_PORT}"
        depends_on:
            - db
        environment:
            PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
            PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"

    elasticsearch:
        image: elasticsearch:7.17.17
        container_name: elasticsearch-pokemons
        environment:
            - node.name=es01
            - cluster.name=es-docker-cluster
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ./elasticsearch/data:/usr/share/elasticsearch/data
        ports:
            - "${ELASTICSEARCH_HOST_PORT}"

    redis:
        image: redis:7.2.4-bookworm
        container_name: redis-pokemons
        restart: always
        ports:
            - "6379:6379"
        volumes:
            - ./redis/d–∞ta:/root/redis
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
        environment:
            - REDIS_PASSWORD="${REDIS_PASSWORD}"
            - REDIS_PORT=6379
            - REDIS_DATABASES=16

    redis-insight:
        image: redis/redisinsight:latest
        container_name: redis-insight-pokemons
        restart: always
        ports:
            - "5540:5540"
        volumes:
            - redis-insight:/data

volumes:
    redis-insight:
